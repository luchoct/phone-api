buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE'
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

plugins {
    id 'org.springframework.boot' version '1.5.2.RELEASE'
}

group 'com.luchoct.phone'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

jar {
    baseName = rootProject.name
    version =  version
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compileOnly 'org.projectlombok:lombok:1.16.16'

    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile 'org.springframework.boot:spring-boot-starter-jetty'

    compile('org.springframework.boot:spring-boot-starter-jdbc') {
        exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc'
    }
    compile 'org.apache.commons:commons-dbcp2:2.1.1'
    compile 'org.springframework:spring-jdbc'

    compile 'org.hsqldb:hsqldb:2.4.0'

    compile 'io.springfox:springfox-swagger2:2.4.0'
    compile 'io.springfox:springfox-swagger-ui:2.4.0'

    testCompile 'junit:junit'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

test {
    systemProperty "spring.profiles.active", "test"
    testLogging {
        exceptionFormat = 'full'
    }
}

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    tag = 'luchoct/phone-api'
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
    exposePort(8080)
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.incremental = true
    options.encoding = "UTF-8"
}
